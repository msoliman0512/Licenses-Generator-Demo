@using Licenses_Generator_DBFirst.EntityClasses
@using Licenses_Generator_Demo.Services
@using Microsoft.AspNetCore.Components.Web
@inject GovernoratesService GovernorateService
<div class="container">
    <h2>User Info</h2>
    <form action="/action_page.php" class="was-validated">
        <div class="form-group">
            <label for="name">Name:</label>
            <input type="text" class="form-control" id="name" placeholder="Enter your full name" name="name" pattern="(^[A-Za-z]{2,40})([ ]{0,1})([A-Za-z]{2,40})([ ]{0,1})([A-Za-z]{2,40})([ ]{0,1})([A-Za-z]{2,40})([ ]{0,1}([A-Za-z]{2,40})" required>
            <div class="valid-feedback">Valid.</div>
            <div class="invalid-tooltip">Please fill out this field.</div>
        </div>
        <div class="form-group">
            <label for="nat_id">National ID:</label>
            <input type="text" class="form-control" id="nat_id" placeholder="Enter Your National ID" name="nat_id" pattern="[0-9]{14}" required>
            <div class="valid-feedback">Valid.</div>
            <div class="invalid-feedback">Please fill out this field.</div>
        </div>
        <div class="form-group">
            <label for="governorate_drop_down"> Choose Your Governorate</label>
            <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">Governorate<span class="caret"></span></button>
            <ul class="dropdown-menu">
                @if (governorates != null)
                {
                    @foreach (var governorate in governorates)
                    {
                        <li><a href="#"></a>@governorate.Name</li>
                    }
                }
            </ul>
        </div>
        <div class="form-group form-check">
            <label class="form-check-label">
                <input class="form-check-input" type="checkbox" name="remember" required>  I confirm that the information given in this form is true, complete and accurate.
                <div class="valid-feedback">Valid.</div>
                <div class="invalid-feedback">Check this checkbox to continue.</div>
            </label>
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
</div>
@code {
    public IEnumerable<GovernorateEntity> governorates;

    protected override async Task OnInitializedAsync()
    {
        Task<IEnumerable<GovernorateEntity>> asyncGovernorates = GovernorateService.GetGovernoratesAsync();
        governorates = await asyncGovernorates;
        if (Utils.Utility.IsAnyProduct(governorates))
        {
            // Do something
        }
        else
        {

        }
    }



}
